{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/api/repos/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { readdirSync } from 'fs';\nimport { join } from 'path';\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Path to your store directory\n    const storeDir = join(process.cwd(), 'store', 'repos');\n    \n    // Read all repository directories\n    const repoDirs = readdirSync(storeDir, { withFileTypes: true })\n      .filter(dirent => dirent.isDirectory())\n      .map(dirent => dirent.name);\n    \n    // For now, just return the list of repositories\n    return NextResponse.json({\n      repositories: repoDirs,\n      count: repoDirs.length,\n    });\n  } catch (error) {\n    console.error('Error reading repositories:', error);\n    return NextResponse.json(\n      { error: 'Failed to load repositories' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAIO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,+BAA+B;QAC/B,MAAM,WAAW,CAAA,GAAA,uCAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,IAAI,SAAS;QAE9C,kCAAkC;QAClC,MAAM,WAAW,CAAA,GAAA,qCAAA,CAAA,cAAW,AAAD,EAAE,UAAU;YAAE,eAAe;QAAK,GAC1D,MAAM,CAAC,CAAA,SAAU,OAAO,WAAW,IACnC,GAAG,CAAC,CAAA,SAAU,OAAO,IAAI;QAE5B,gDAAgD;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,cAAc;YACd,OAAO,SAAS,MAAM;QACxB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}