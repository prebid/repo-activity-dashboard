{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/tailwind-merge/src/lib/class-group-utils.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/lru-cache.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/parse-class-name.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/sort-modifiers.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/config-utils.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/merge-classlist.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/tw-join.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/from-theme.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/validators.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/default-config.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/merge-configs.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts","/turbopack/[project]/node_modules/tailwind-merge/src/lib/tw-merge.ts"],"sourcesContent":["import {\n    AnyClassGroupIds,\n    AnyConfig,\n    AnyThemeGroupIds,\n    ClassGroup,\n    ClassValidator,\n    Config,\n    ThemeGetter,\n    ThemeObject,\n} from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: AnyClassGroupIds\n}\n\ninterface ClassValidatorObject {\n    classGroupId: AnyClassGroupIds\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport const createClassGroupUtils = (config: AnyConfig) => {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\n\n    const getClassGroupId = (className: string) => {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    const getConflictingClassGroupIds = (\n        classGroupId: AnyClassGroupIds,\n        hasPostfixModifier: boolean,\n    ) => {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nconst getGroupRecursive = (\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): AnyClassGroupIds | undefined => {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nconst getGroupIdForArbitraryProperty = (className: string) => {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport const createClassMap = (config: Config<AnyClassGroupIds, AnyThemeGroupIds>) => {\n    const { theme, classGroups } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    for (const classGroupId in classGroups) {\n        processClassesRecursively(classGroups[classGroupId]!, classMap, classGroupId, theme)\n    }\n\n    return classMap\n}\n\nconst processClassesRecursively = (\n    classGroup: ClassGroup<AnyThemeGroupIds>,\n    classPartObject: ClassPartObject,\n    classGroupId: AnyClassGroupIds,\n    theme: ThemeObject<AnyThemeGroupIds>,\n) => {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nconst getPart = (classPartObject: ClassPartObject, path: string) => {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nconst isThemeGetter = (func: ClassValidator | ThemeGetter): func is ThemeGetter =>\n    (func as ThemeGetter).isThemeGetter\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport const createLruCache = <Key, Value>(maxCacheSize: number): LruCache<Key, Value> => {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    const update = (key: Key, value: Value) => {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { AnyConfig, ParsedClassName } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\nconst MODIFIER_SEPARATOR = ':'\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length\n\nexport const createParseClassName = (config: AnyConfig) => {\n    const { prefix, experimentalParseClassName } = config\n\n    /**\n     * Parse class name into parts.\n     *\n     * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n     * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n     */\n    let parseClassName = (className: string): ParsedClassName => {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let parenDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0 && parenDepth === 0) {\n                if (currentCharacter === MODIFIER_SEPARATOR) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            } else if (currentCharacter === '(') {\n                parenDepth++\n            } else if (currentCharacter === ')') {\n                parenDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier)\n        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n\n    if (prefix) {\n        const fullPrefix = prefix + MODIFIER_SEPARATOR\n        const parseClassNameOriginal = parseClassName\n        parseClassName = (className) =>\n            className.startsWith(fullPrefix)\n                ? parseClassNameOriginal(className.substring(fullPrefix.length))\n                : {\n                      isExternal: true,\n                      modifiers: [],\n                      hasImportantModifier: false,\n                      baseClassName: className,\n                      maybePostfixModifierPosition: undefined,\n                  }\n    }\n\n    if (experimentalParseClassName) {\n        const parseClassNameOriginal = parseClassName\n        parseClassName = (className) =>\n            experimentalParseClassName({ className, parseClassName: parseClassNameOriginal })\n    }\n\n    return parseClassName\n}\n\nconst stripImportantModifier = (baseClassName: string) => {\n    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(0, baseClassName.length - 1)\n    }\n\n    /**\n     * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n     * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n     */\n    if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(1)\n    }\n\n    return baseClassName\n}\n","import { AnyConfig } from './types'\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport const createSortModifiers = (config: AnyConfig) => {\n    const orderSensitiveModifiers = Object.fromEntries(\n        config.orderSensitiveModifiers.map((modifier) => [modifier, true]),\n    )\n\n    const sortModifiers = (modifiers: string[]) => {\n        if (modifiers.length <= 1) {\n            return modifiers\n        }\n\n        const sortedModifiers: string[] = []\n        let unsortedModifiers: string[] = []\n\n        modifiers.forEach((modifier) => {\n            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier]\n\n            if (isPositionSensitive) {\n                sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n                unsortedModifiers = []\n            } else {\n                unsortedModifiers.push(modifier)\n            }\n        })\n\n        sortedModifiers.push(...unsortedModifiers.sort())\n\n        return sortedModifiers\n    }\n\n    return sortModifiers\n}\n","import { createClassGroupUtils } from './class-group-utils'\nimport { createLruCache } from './lru-cache'\nimport { createParseClassName } from './parse-class-name'\nimport { createSortModifiers } from './sort-modifiers'\nimport { AnyConfig } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport const createConfigUtils = (config: AnyConfig) => ({\n    cache: createLruCache<string, string>(config.cacheSize),\n    parseClassName: createParseClassName(config),\n    sortModifiers: createSortModifiers(config),\n    ...createClassGroupUtils(config),\n})\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER } from './parse-class-name'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport const mergeClassList = (classList: string, configUtils: ConfigUtils) => {\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } =\n        configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict: string[] = []\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX)\n\n    let result = ''\n\n    for (let index = classNames.length - 1; index >= 0; index -= 1) {\n        const originalClassName = classNames[index]!\n\n        const {\n            isExternal,\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        } = parseClassName(originalClassName)\n\n        if (isExternal) {\n            result = originalClassName + (result.length > 0 ? ' ' + result : result)\n            continue\n        }\n\n        let hasPostfixModifier = !!maybePostfixModifierPosition\n        let classGroupId = getClassGroupId(\n            hasPostfixModifier\n                ? baseClassName.substring(0, maybePostfixModifierPosition)\n                : baseClassName,\n        )\n\n        if (!classGroupId) {\n            if (!hasPostfixModifier) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            classGroupId = getClassGroupId(baseClassName)\n\n            if (!classGroupId) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            hasPostfixModifier = false\n        }\n\n        const variantModifier = sortModifiers(modifiers).join(':')\n\n        const modifierId = hasImportantModifier\n            ? variantModifier + IMPORTANT_MODIFIER\n            : variantModifier\n\n        const classId = modifierId + classGroupId\n\n        if (classGroupsInConflict.includes(classId)) {\n            // Tailwind class omitted due to conflict\n            continue\n        }\n\n        classGroupsInConflict.push(classId)\n\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier)\n        for (let i = 0; i < conflictGroups.length; ++i) {\n            const group = conflictGroups[i]!\n            classGroupsInConflict.push(modifierId + group)\n        }\n\n        // Tailwind class not in conflict\n        result = originalClassName + (result.length > 0 ? ' ' + result : result)\n    }\n\n    return result\n}\n","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nconst toValue = (mix: ClassNameArray | string) => {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { AnyConfig } from './types'\n\ntype CreateConfigFirst = () => AnyConfig\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    createConfigFirst: CreateConfigFirst,\n    ...createConfigRest: CreateConfigSubsequent[]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const config = createConfigRest.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            createConfigFirst() as AnyConfig,\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\n\nexport const fromTheme = <\n    AdditionalThemeGroupIds extends string = never,\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter => {\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\n        theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\nconst imageRegex =\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\n\nexport const isFraction = (value: string) => fractionRegex.test(value)\n\nexport const isNumber = (value: string) => !!value && !Number.isNaN(Number(value))\n\nexport const isInteger = (value: string) => !!value && Number.isInteger(Number(value))\n\nexport const isPercent = (value: string) => value.endsWith('%') && isNumber(value.slice(0, -1))\n\nexport const isTshirtSize = (value: string) => tshirtUnitRegex.test(value)\n\nexport const isAny = () => true\n\nconst isLengthOnly = (value: string) =>\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\n\nconst isNever = () => false\n\nconst isShadow = (value: string) => shadowRegex.test(value)\n\nconst isImage = (value: string) => imageRegex.test(value)\n\nexport const isAnyNonArbitrary = (value: string) =>\n    !isArbitraryValue(value) && !isArbitraryVariable(value)\n\nexport const isArbitrarySize = (value: string) => getIsArbitraryValue(value, isLabelSize, isNever)\n\nexport const isArbitraryValue = (value: string) => arbitraryValueRegex.test(value)\n\nexport const isArbitraryLength = (value: string) =>\n    getIsArbitraryValue(value, isLabelLength, isLengthOnly)\n\nexport const isArbitraryNumber = (value: string) =>\n    getIsArbitraryValue(value, isLabelNumber, isNumber)\n\nexport const isArbitraryPosition = (value: string) =>\n    getIsArbitraryValue(value, isLabelPosition, isNever)\n\nexport const isArbitraryImage = (value: string) => getIsArbitraryValue(value, isLabelImage, isImage)\n\nexport const isArbitraryShadow = (value: string) =>\n    getIsArbitraryValue(value, isLabelShadow, isShadow)\n\nexport const isArbitraryVariable = (value: string) => arbitraryVariableRegex.test(value)\n\nexport const isArbitraryVariableLength = (value: string) =>\n    getIsArbitraryVariable(value, isLabelLength)\n\nexport const isArbitraryVariableFamilyName = (value: string) =>\n    getIsArbitraryVariable(value, isLabelFamilyName)\n\nexport const isArbitraryVariablePosition = (value: string) =>\n    getIsArbitraryVariable(value, isLabelPosition)\n\nexport const isArbitraryVariableSize = (value: string) => getIsArbitraryVariable(value, isLabelSize)\n\nexport const isArbitraryVariableImage = (value: string) =>\n    getIsArbitraryVariable(value, isLabelImage)\n\nexport const isArbitraryVariableShadow = (value: string) =>\n    getIsArbitraryVariable(value, isLabelShadow, true)\n\n// Helpers\n\nconst getIsArbitraryValue = (\n    value: string,\n    testLabel: (label: string) => boolean,\n    testValue: (value: string) => boolean,\n) => {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1])\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nconst getIsArbitraryVariable = (\n    value: string,\n    testLabel: (label: string) => boolean,\n    shouldMatchNoLabel = false,\n) => {\n    const result = arbitraryVariableRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1])\n        }\n        return shouldMatchNoLabel\n    }\n\n    return false\n}\n\n// Labels\n\nconst isLabelPosition = (label: string) => label === 'position' || label === 'percentage'\n\nconst isLabelImage = (label: string) => label === 'image' || label === 'url'\n\nconst isLabelSize = (label: string) => label === 'length' || label === 'size' || label === 'bg-size'\n\nconst isLabelLength = (label: string) => label === 'length'\n\nconst isLabelNumber = (label: string) => label === 'number'\n\nconst isLabelFamilyName = (label: string) => label === 'family-name'\n\nconst isLabelShadow = (label: string) => label === 'shadow'\n","import { fromTheme } from './from-theme'\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\nimport {\n    isAny,\n    isAnyNonArbitrary,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isArbitraryVariable,\n    isArbitraryVariableFamilyName,\n    isArbitraryVariableImage,\n    isArbitraryVariableLength,\n    isArbitraryVariablePosition,\n    isArbitraryVariableShadow,\n    isArbitraryVariableSize,\n    isFraction,\n    isInteger,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport const getDefaultConfig = () => {\n    /**\n     * Theme getters for theme variable namespaces\n     * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n     */\n    /***/\n\n    const themeColor = fromTheme('color')\n    const themeFont = fromTheme('font')\n    const themeText = fromTheme('text')\n    const themeFontWeight = fromTheme('font-weight')\n    const themeTracking = fromTheme('tracking')\n    const themeLeading = fromTheme('leading')\n    const themeBreakpoint = fromTheme('breakpoint')\n    const themeContainer = fromTheme('container')\n    const themeSpacing = fromTheme('spacing')\n    const themeRadius = fromTheme('radius')\n    const themeShadow = fromTheme('shadow')\n    const themeInsetShadow = fromTheme('inset-shadow')\n    const themeTextShadow = fromTheme('text-shadow')\n    const themeDropShadow = fromTheme('drop-shadow')\n    const themeBlur = fromTheme('blur')\n    const themePerspective = fromTheme('perspective')\n    const themeAspect = fromTheme('aspect')\n    const themeEase = fromTheme('ease')\n    const themeAnimate = fromTheme('animate')\n\n    /**\n     * Helpers to avoid repeating the same scales\n     *\n     * We use functions that create a new array every time they're called instead of static arrays.\n     * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n     */\n    /***/\n\n    const scaleBreak = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const scalePosition = () =>\n        [\n            'center',\n            'top',\n            'bottom',\n            'left',\n            'right',\n            'top-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-top',\n            'top-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-top',\n            'bottom-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-bottom',\n            'bottom-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-bottom',\n        ] as const\n    const scalePositionWithArbitrary = () =>\n        [...scalePosition(), isArbitraryVariable, isArbitraryValue] as const\n    const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const scaleOverscroll = () => ['auto', 'contain', 'none'] as const\n    const scaleUnambiguousSpacing = () =>\n        [isArbitraryVariable, isArbitraryValue, themeSpacing] as const\n    const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()] as const\n    const scaleGridTemplateColsRows = () =>\n        [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue] as const\n    const scaleGridColRowStartAndEnd = () =>\n        [\n            'auto',\n            { span: ['full', isInteger, isArbitraryVariable, isArbitraryValue] },\n            isInteger,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleGridColRowStartOrEnd = () =>\n        [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] as const\n    const scaleGridAutoColsRows = () =>\n        ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue] as const\n    const scaleAlignPrimaryAxis = () =>\n        [\n            'start',\n            'end',\n            'center',\n            'between',\n            'around',\n            'evenly',\n            'stretch',\n            'baseline',\n            'center-safe',\n            'end-safe',\n        ] as const\n    const scaleAlignSecondaryAxis = () =>\n        ['start', 'end', 'center', 'stretch', 'center-safe', 'end-safe'] as const\n    const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()] as const\n    const scaleSizing = () =>\n        [\n            isFraction,\n            'auto',\n            'full',\n            'dvw',\n            'dvh',\n            'lvw',\n            'lvh',\n            'svw',\n            'svh',\n            'min',\n            'max',\n            'fit',\n            ...scaleUnambiguousSpacing(),\n        ] as const\n    const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue] as const\n    const scaleBgPosition = () =>\n        [\n            ...scalePosition(),\n            isArbitraryVariablePosition,\n            isArbitraryPosition,\n            { position: [isArbitraryVariable, isArbitraryValue] },\n        ] as const\n    const scaleBgRepeat = () => ['no-repeat', { repeat: ['', 'x', 'y', 'space', 'round'] }] as const\n    const scaleBgSize = () =>\n        [\n            'auto',\n            'cover',\n            'contain',\n            isArbitraryVariableSize,\n            isArbitrarySize,\n            { size: [isArbitraryVariable, isArbitraryValue] },\n        ] as const\n    const scaleGradientStopPosition = () =>\n        [isPercent, isArbitraryVariableLength, isArbitraryLength] as const\n    const scaleRadius = () =>\n        [\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            'full',\n            themeRadius,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleBorderWidth = () =>\n        ['', isNumber, isArbitraryVariableLength, isArbitraryLength] as const\n    const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'] as const\n    const scaleBlendMode = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n        ] as const\n    const scaleMaskImagePosition = () =>\n        [isNumber, isPercent, isArbitraryVariablePosition, isArbitraryPosition] as const\n    const scaleBlur = () =>\n        [\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            themeBlur,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()] as const\n\n    return {\n        cacheSize: 500,\n        theme: {\n            animate: ['spin', 'ping', 'pulse', 'bounce'],\n            aspect: ['video'],\n            blur: [isTshirtSize],\n            breakpoint: [isTshirtSize],\n            color: [isAny],\n            container: [isTshirtSize],\n            'drop-shadow': [isTshirtSize],\n            ease: ['in', 'out', 'in-out'],\n            font: [isAnyNonArbitrary],\n            'font-weight': [\n                'thin',\n                'extralight',\n                'light',\n                'normal',\n                'medium',\n                'semibold',\n                'bold',\n                'extrabold',\n                'black',\n            ],\n            'inset-shadow': [isTshirtSize],\n            leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n            perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n            radius: [isTshirtSize],\n            shadow: [isTshirtSize],\n            spacing: ['px', isNumber],\n            text: [isTshirtSize],\n            'text-shadow': [isTshirtSize],\n            tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest'],\n        },\n        classGroups: {\n            // --------------\n            // --- Layout ---\n            // --------------\n\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [\n                {\n                    aspect: [\n                        'auto',\n                        'square',\n                        isFraction,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeAspect,\n                    ],\n                },\n            ],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             * @deprecated since Tailwind CSS v4.0.0\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [\n                { columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer] },\n            ],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': scaleBreak() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': scaleBreak() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Screen Reader Only\n             * @see https://tailwindcss.com/docs/display#screen-reader-only\n             */\n            sr: ['sr-only', 'not-sr-only'],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: scalePositionWithArbitrary() }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: scaleOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': scaleOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': scaleOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: scaleOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': scaleOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': scaleOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: scaleInset() }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': scaleInset() }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': scaleInset() }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: scaleInset() }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: scaleInset() }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: scaleInset() }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: scaleInset() }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: scaleInset() }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: scaleInset() }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] }],\n\n            // ------------------------\n            // --- Flexbox and Grid ---\n            // ------------------------\n\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [\n                {\n                    basis: [\n                        isFraction,\n                        'full',\n                        'auto',\n                        themeContainer,\n                        ...scaleUnambiguousSpacing(),\n                    ],\n                },\n            ],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['nowrap', 'wrap', 'wrap-reverse'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [\n                {\n                    order: [\n                        isInteger,\n                        'first',\n                        'last',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': scaleGridTemplateColsRows() }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: scaleGridColRowStartAndEnd() }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': scaleGridTemplateColsRows() }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: scaleGridColRowStartAndEnd() }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': scaleGridAutoColsRows() }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': scaleGridAutoColsRows() }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: scaleUnambiguousSpacing() }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': scaleUnambiguousSpacing() }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': scaleUnambiguousSpacing() }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: [...scaleAlignPrimaryAxis(), 'normal'] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': [...scaleAlignSecondaryAxis(), 'normal'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', ...scaleAlignSecondaryAxis()] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...scaleAlignPrimaryAxis()] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: [...scaleAlignSecondaryAxis(), { baseline: ['', 'last'] }] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [\n                { self: ['auto', ...scaleAlignSecondaryAxis(), { baseline: ['', 'last'] }] },\n            ],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': scaleAlignPrimaryAxis() }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': [...scaleAlignSecondaryAxis(), 'baseline'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', ...scaleAlignSecondaryAxis()] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: scaleUnambiguousSpacing() }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: scaleUnambiguousSpacing() }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: scaleUnambiguousSpacing() }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: scaleMargin() }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: scaleMargin() }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: scaleMargin() }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: scaleMargin() }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: scaleMargin() }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: scaleMargin() }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: scaleMargin() }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: scaleMargin() }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: scaleMargin() }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-x': [{ 'space-x': scaleUnambiguousSpacing() }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-y': [{ 'space-y': scaleUnambiguousSpacing() }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-y-reverse': ['space-y-reverse'],\n\n            // --------------\n            // --- Sizing ---\n            // --------------\n\n            /**\n             * Size\n             * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n             */\n            size: [{ size: scaleSizing() }],\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: [themeContainer, 'screen', ...scaleSizing()] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [\n                {\n                    'min-w': [\n                        themeContainer,\n                        'screen',\n                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        'none',\n                        ...scaleSizing(),\n                    ],\n                },\n            ],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        themeContainer,\n                        'screen',\n                        'none',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        'prose',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        { screen: [themeBreakpoint] },\n                        ...scaleSizing(),\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: ['screen', 'lh', ...scaleSizing()] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['screen', 'lh', 'none', ...scaleSizing()] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': ['screen', 'lh', ...scaleSizing()] }],\n\n            // ------------------\n            // --- Typography ---\n            // ------------------\n\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [\n                { text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength] },\n            ],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [{ font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber] }],\n            /**\n             * Font Stretch\n             * @see https://tailwindcss.com/docs/font-stretch\n             */\n            'font-stretch': [\n                {\n                    'font-stretch': [\n                        'ultra-condensed',\n                        'extra-condensed',\n                        'condensed',\n                        'semi-condensed',\n                        'normal',\n                        'semi-expanded',\n                        'expanded',\n                        'extra-expanded',\n                        'ultra-expanded',\n                        isPercent,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [{ tracking: [themeTracking, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [\n                { 'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber] },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        themeLeading,\n                        ...scaleUnambiguousSpacing(),\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [\n                { list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://v3.tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: scaleColor() }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: scaleColor() }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...scaleLineStyle(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [\n                {\n                    decoration: [\n                        isNumber,\n                        'from-font',\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: scaleColor() }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [\n                { 'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Wrap\n             * @see https://tailwindcss.com/docs/text-wrap\n             */\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: scaleUnambiguousSpacing() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Overflow Wrap\n             * @see https://tailwindcss.com/docs/overflow-wrap\n             */\n            wrap: [{ wrap: ['break-word', 'anywhere', 'normal'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryVariable, isArbitraryValue] }],\n\n            // -------------------\n            // --- Backgrounds ---\n            // -------------------\n\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: scaleBgPosition() }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: scaleBgRepeat() }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: scaleBgSize() }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        {\n                            linear: [\n                                { to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue,\n                            ],\n                            radial: ['', isArbitraryVariable, isArbitraryValue],\n                            conic: [isInteger, isArbitraryVariable, isArbitraryValue],\n                        },\n                        isArbitraryVariableImage,\n                        isArbitraryImage,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: scaleColor() }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: scaleColor() }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: scaleColor() }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: scaleColor() }],\n\n            // ---------------\n            // --- Borders ---\n            // ---------------\n\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: scaleRadius() }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': scaleRadius() }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': scaleRadius() }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': scaleRadius() }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': scaleRadius() }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': scaleRadius() }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': scaleRadius() }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': scaleRadius() }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': scaleRadius() }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': scaleRadius() }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': scaleRadius() }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': scaleRadius() }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': scaleRadius() }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': scaleRadius() }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': scaleRadius() }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: scaleBorderWidth() }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': scaleBorderWidth() }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': scaleBorderWidth() }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': scaleBorderWidth() }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': scaleBorderWidth() }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': scaleBorderWidth() }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': scaleBorderWidth() }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': scaleBorderWidth() }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': scaleBorderWidth() }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-x': [{ 'divide-x': scaleBorderWidth() }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-y': [{ 'divide-y': scaleBorderWidth() }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...scaleLineStyle(), 'hidden', 'none'] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n             */\n            'divide-style': [{ divide: [...scaleLineStyle(), 'hidden', 'none'] }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: scaleColor() }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': scaleColor() }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': scaleColor() }],\n            /**\n             * Border Color S\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-s': [{ 'border-s': scaleColor() }],\n            /**\n             * Border Color E\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-e': [{ 'border-e': scaleColor() }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': scaleColor() }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': scaleColor() }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': scaleColor() }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': scaleColor() }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: scaleColor() }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: [...scaleLineStyle(), 'none', 'hidden'] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [\n                { 'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [\n                { outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength] },\n            ],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: scaleColor() }],\n\n            // ---------------\n            // --- Effects ---\n            // ---------------\n\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [\n                {\n                    shadow: [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n             */\n            'shadow-color': [{ shadow: scaleColor() }],\n            /**\n             * Inset Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n             */\n            'inset-shadow': [\n                {\n                    'inset-shadow': [\n                        'none',\n                        themeInsetShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Inset Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n             */\n            'inset-shadow-color': [{ 'inset-shadow': scaleColor() }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n             */\n            'ring-w': [{ ring: scaleBorderWidth() }],\n            /**\n             * Ring Width Inset\n             * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n             */\n            'ring-color': [{ ring: scaleColor() }],\n            /**\n             * Ring Offset Width\n             * @see https://v3.tailwindcss.com/docs/ring-offset-width\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-offset-w': [{ 'ring-offset': [isNumber, isArbitraryLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://v3.tailwindcss.com/docs/ring-offset-color\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-offset-color': [{ 'ring-offset': scaleColor() }],\n            /**\n             * Inset Ring Width\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n             */\n            'inset-ring-w': [{ 'inset-ring': scaleBorderWidth() }],\n            /**\n             * Inset Ring Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n             */\n            'inset-ring-color': [{ 'inset-ring': scaleColor() }],\n            /**\n             * Text Shadow\n             * @see https://tailwindcss.com/docs/text-shadow\n             */\n            'text-shadow': [\n                {\n                    'text-shadow': [\n                        'none',\n                        themeTextShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Text Shadow Color\n             * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n             */\n            'text-shadow-color': [{ 'text-shadow': scaleColor() }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter'] }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': scaleBlendMode() }],\n            /**\n             * Mask Clip\n             * @see https://tailwindcss.com/docs/mask-clip\n             */\n            'mask-clip': [\n                { 'mask-clip': ['border', 'padding', 'content', 'fill', 'stroke', 'view'] },\n                'mask-no-clip',\n            ],\n            /**\n             * Mask Composite\n             * @see https://tailwindcss.com/docs/mask-composite\n             */\n            'mask-composite': [{ mask: ['add', 'subtract', 'intersect', 'exclude'] }],\n            /**\n             * Mask Image\n             * @see https://tailwindcss.com/docs/mask-image\n             */\n            'mask-image-linear-pos': [{ 'mask-linear': [isNumber] }],\n            'mask-image-linear-from-pos': [{ 'mask-linear-from': scaleMaskImagePosition() }],\n            'mask-image-linear-to-pos': [{ 'mask-linear-to': scaleMaskImagePosition() }],\n            'mask-image-linear-from-color': [{ 'mask-linear-from': scaleColor() }],\n            'mask-image-linear-to-color': [{ 'mask-linear-to': scaleColor() }],\n            'mask-image-t-from-pos': [{ 'mask-t-from': scaleMaskImagePosition() }],\n            'mask-image-t-to-pos': [{ 'mask-t-to': scaleMaskImagePosition() }],\n            'mask-image-t-from-color': [{ 'mask-t-from': scaleColor() }],\n            'mask-image-t-to-color': [{ 'mask-t-to': scaleColor() }],\n            'mask-image-r-from-pos': [{ 'mask-r-from': scaleMaskImagePosition() }],\n            'mask-image-r-to-pos': [{ 'mask-r-to': scaleMaskImagePosition() }],\n            'mask-image-r-from-color': [{ 'mask-r-from': scaleColor() }],\n            'mask-image-r-to-color': [{ 'mask-r-to': scaleColor() }],\n            'mask-image-b-from-pos': [{ 'mask-b-from': scaleMaskImagePosition() }],\n            'mask-image-b-to-pos': [{ 'mask-b-to': scaleMaskImagePosition() }],\n            'mask-image-b-from-color': [{ 'mask-b-from': scaleColor() }],\n            'mask-image-b-to-color': [{ 'mask-b-to': scaleColor() }],\n            'mask-image-l-from-pos': [{ 'mask-l-from': scaleMaskImagePosition() }],\n            'mask-image-l-to-pos': [{ 'mask-l-to': scaleMaskImagePosition() }],\n            'mask-image-l-from-color': [{ 'mask-l-from': scaleColor() }],\n            'mask-image-l-to-color': [{ 'mask-l-to': scaleColor() }],\n            'mask-image-x-from-pos': [{ 'mask-x-from': scaleMaskImagePosition() }],\n            'mask-image-x-to-pos': [{ 'mask-x-to': scaleMaskImagePosition() }],\n            'mask-image-x-from-color': [{ 'mask-x-from': scaleColor() }],\n            'mask-image-x-to-color': [{ 'mask-x-to': scaleColor() }],\n            'mask-image-y-from-pos': [{ 'mask-y-from': scaleMaskImagePosition() }],\n            'mask-image-y-to-pos': [{ 'mask-y-to': scaleMaskImagePosition() }],\n            'mask-image-y-from-color': [{ 'mask-y-from': scaleColor() }],\n            'mask-image-y-to-color': [{ 'mask-y-to': scaleColor() }],\n            'mask-image-radial': [{ 'mask-radial': [isArbitraryVariable, isArbitraryValue] }],\n            'mask-image-radial-from-pos': [{ 'mask-radial-from': scaleMaskImagePosition() }],\n            'mask-image-radial-to-pos': [{ 'mask-radial-to': scaleMaskImagePosition() }],\n            'mask-image-radial-from-color': [{ 'mask-radial-from': scaleColor() }],\n            'mask-image-radial-to-color': [{ 'mask-radial-to': scaleColor() }],\n            'mask-image-radial-shape': [{ 'mask-radial': ['circle', 'ellipse'] }],\n            'mask-image-radial-size': [\n                { 'mask-radial': [{ closest: ['side', 'corner'], farthest: ['side', 'corner'] }] },\n            ],\n            'mask-image-radial-pos': [{ 'mask-radial-at': scalePosition() }],\n            'mask-image-conic-pos': [{ 'mask-conic': [isNumber] }],\n            'mask-image-conic-from-pos': [{ 'mask-conic-from': scaleMaskImagePosition() }],\n            'mask-image-conic-to-pos': [{ 'mask-conic-to': scaleMaskImagePosition() }],\n            'mask-image-conic-from-color': [{ 'mask-conic-from': scaleColor() }],\n            'mask-image-conic-to-color': [{ 'mask-conic-to': scaleColor() }],\n            /**\n             * Mask Mode\n             * @see https://tailwindcss.com/docs/mask-mode\n             */\n            'mask-mode': [{ mask: ['alpha', 'luminance', 'match'] }],\n            /**\n             * Mask Origin\n             * @see https://tailwindcss.com/docs/mask-origin\n             */\n            'mask-origin': [\n                { 'mask-origin': ['border', 'padding', 'content', 'fill', 'stroke', 'view'] },\n            ],\n            /**\n             * Mask Position\n             * @see https://tailwindcss.com/docs/mask-position\n             */\n            'mask-position': [{ mask: scaleBgPosition() }],\n            /**\n             * Mask Repeat\n             * @see https://tailwindcss.com/docs/mask-repeat\n             */\n            'mask-repeat': [{ mask: scaleBgRepeat() }],\n            /**\n             * Mask Size\n             * @see https://tailwindcss.com/docs/mask-size\n             */\n            'mask-size': [{ mask: scaleBgSize() }],\n            /**\n             * Mask Type\n             * @see https://tailwindcss.com/docs/mask-type\n             */\n            'mask-type': [{ 'mask-type': ['alpha', 'luminance'] }],\n            /**\n             * Mask Image\n             * @see https://tailwindcss.com/docs/mask-image\n             */\n            'mask-image': [{ mask: ['none', isArbitraryVariable, isArbitraryValue] }],\n\n            // ---------------\n            // --- Filters ---\n            // ---------------\n\n            /**\n             * Filter\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [\n                {\n                    filter: [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: scaleBlur() }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [\n                {\n                    'drop-shadow': [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeDropShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Drop Shadow Color\n             * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n             */\n            'drop-shadow-color': [{ 'drop-shadow': scaleColor() }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Backdrop Filter\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [\n                {\n                    'backdrop-filter': [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': scaleBlur() }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [\n                { 'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [\n                { 'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [\n                { 'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [\n                { 'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [\n                { 'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [\n                { 'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [\n                { 'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [\n                { 'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n\n            // --------------\n            // --- Tables ---\n            // --------------\n\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': scaleUnambiguousSpacing() }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': scaleUnambiguousSpacing() }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': scaleUnambiguousSpacing() }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n\n            // ---------------------------------\n            // --- Transitions and Animation ---\n            // ---------------------------------\n\n            /**\n             * Transition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        '',\n                        'all',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Behavior\n             * @see https://tailwindcss.com/docs/transition-behavior\n             */\n            'transition-behavior': [{ transition: ['normal', 'discrete'] }],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [\n                { ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue] }],\n\n            // ------------------\n            // --- Transforms ---\n            // ------------------\n\n            /**\n             * Backface Visibility\n             * @see https://tailwindcss.com/docs/backface-visibility\n             */\n            backface: [{ backface: ['hidden', 'visible'] }],\n            /**\n             * Perspective\n             * @see https://tailwindcss.com/docs/perspective\n             */\n            perspective: [\n                { perspective: [themePerspective, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Perspective Origin\n             * @see https://tailwindcss.com/docs/perspective-origin\n             */\n            'perspective-origin': [{ 'perspective-origin': scalePositionWithArbitrary() }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: scaleRotate() }],\n            /**\n             * Rotate X\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-x': [{ 'rotate-x': scaleRotate() }],\n            /**\n             * Rotate Y\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-y': [{ 'rotate-y': scaleRotate() }],\n            /**\n             * Rotate Z\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-z': [{ 'rotate-z': scaleRotate() }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: scaleScale() }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': scaleScale() }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': scaleScale() }],\n            /**\n             * Scale Z\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-z': [{ 'scale-z': scaleScale() }],\n            /**\n             * Scale 3D\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-3d': ['scale-3d'],\n            /**\n             * Skew\n             * @see https://tailwindcss.com/docs/skew\n             */\n            skew: [{ skew: scaleSkew() }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': scaleSkew() }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': scaleSkew() }],\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [\n                { transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu'] },\n            ],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [{ origin: scalePositionWithArbitrary() }],\n            /**\n             * Transform Style\n             * @see https://tailwindcss.com/docs/transform-style\n             */\n            'transform-style': [{ transform: ['3d', 'flat'] }],\n            /**\n             * Translate\n             * @see https://tailwindcss.com/docs/translate\n             */\n            translate: [{ translate: scaleTranslate() }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': scaleTranslate() }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': scaleTranslate() }],\n            /**\n             * Translate Z\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-z': [{ 'translate-z': scaleTranslate() }],\n            /**\n             * Translate None\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-none': ['translate-none'],\n\n            // ---------------------\n            // --- Interactivity ---\n            // ---------------------\n\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: scaleColor() }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: [{ appearance: ['none', 'auto'] }],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: scaleColor() }],\n            /**\n             * Color Scheme\n             * @see https://tailwindcss.com/docs/color-scheme\n             */\n            'color-scheme': [\n                { scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light'] },\n            ],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Field Sizing\n             * @see https://tailwindcss.com/docs/field-sizing\n             */\n            'field-sizing': [{ 'field-sizing': ['fixed', 'content'] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['auto', 'none'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', '', 'y', 'x'] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [{ touch: ['auto', 'none', 'manipulation'] }],\n            /**\n             * Touch Action X\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-x': [{ 'touch-pan': ['x', 'left', 'right'] }],\n            /**\n             * Touch Action Y\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-y': [{ 'touch-pan': ['y', 'up', 'down'] }],\n            /**\n             * Touch Action Pinch Zoom\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-pz': ['touch-pinch-zoom'],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                {\n                    'will-change': [\n                        'auto',\n                        'scroll',\n                        'contents',\n                        'transform',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n\n            // -----------\n            // --- SVG ---\n            // -----------\n\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: ['none', ...scaleColor()] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [\n                {\n                    stroke: [\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength,\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: ['none', ...scaleColor()] }],\n\n            // ---------------------\n            // --- Accessibility ---\n            // ---------------------\n\n            /**\n             * Forced Color Adjust\n             * @see https://tailwindcss.com/docs/forced-color-adjust\n             */\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            size: ['w', 'h'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            'line-clamp': ['display', 'overflow'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-x',\n                'border-w-y',\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-x',\n                'border-color-y',\n                'border-color-s',\n                'border-color-e',\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            translate: ['translate-x', 'translate-y', 'translate-none'],\n            'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\n            'touch-x': ['touch'],\n            'touch-y': ['touch'],\n            'touch-pz': ['touch'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n        orderSensitiveModifiers: [\n            '*',\n            '**',\n            'after',\n            'backdrop',\n            'before',\n            'details-content',\n            'file',\n            'first-letter',\n            'first-line',\n            'marker',\n            'placeholder',\n            'selection',\n        ],\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\n}\n","import { AnyConfig, ConfigExtension, NoInfer } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport const mergeConfigs = <ClassGroupIds extends string, ThemeGroupIds extends string = never>(\n    baseConfig: AnyConfig,\n    {\n        cacheSize,\n        prefix,\n        experimentalParseClassName,\n        extend = {},\n        override = {},\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\n) => {\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\n    overrideProperty(baseConfig, 'prefix', prefix)\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName)\n\n    overrideConfigProperties(baseConfig.theme, override.theme)\n    overrideConfigProperties(baseConfig.classGroups, override.classGroups)\n    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups)\n    overrideConfigProperties(\n        baseConfig.conflictingClassGroupModifiers,\n        override.conflictingClassGroupModifiers,\n    )\n    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers)\n\n    mergeConfigProperties(baseConfig.theme, extend.theme)\n    mergeConfigProperties(baseConfig.classGroups, extend.classGroups)\n    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups)\n    mergeConfigProperties(\n        baseConfig.conflictingClassGroupModifiers,\n        extend.conflictingClassGroupModifiers,\n    )\n    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers')\n\n    return baseConfig\n}\n\nconst overrideProperty = <T extends object, K extends keyof T>(\n    baseObject: T,\n    overrideKey: K,\n    overrideValue: T[K] | undefined,\n) => {\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue\n    }\n}\n\nconst overrideConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (overrideObject) {\n        for (const key in overrideObject) {\n            overrideProperty(baseObject, key, overrideObject[key])\n        }\n    }\n}\n\nconst mergeConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (mergeObject) {\n        for (const key in mergeObject) {\n            mergeArrayProperties(baseObject, mergeObject, key)\n        }\n    }\n}\n\nconst mergeArrayProperties = <Key extends string>(\n    baseObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\n    mergeObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\n    key: Key,\n) => {\n    const mergeValue = mergeObject[key]\n\n    if (mergeValue !== undefined) {\n        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { AnyConfig, ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\n\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\n\nexport const extendTailwindMerge = <\n    AdditionalClassGroupIds extends string = never,\n    AdditionalThemeGroupIds extends string = never,\n>(\n    configExtension:\n        | ConfigExtension<\n              DefaultClassGroupIds | AdditionalClassGroupIds,\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\n          >\n        | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) =>\n    typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n"],"names":["CLASS_PART_SEPARATOR","createClassGroupUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","classGroups","Map","processClassesRecursively","classGroup","forEach","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","Object","entries","key","path","currentClassPartObject","pathPart","has","set","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","value","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR","MODIFIER_SEPARATOR_LENGTH","createParseClassName","prefix","experimentalParseClassName","parseClassName","modifiers","bracketDepth","parenDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","startsWith","isExternal","endsWith","createSortModifiers","orderSensitiveModifiers","fromEntries","map","modifier","sortModifiers","sortedModifiers","unsortedModifiers","isPositionSensitive","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","classNames","trim","result","originalClassName","variantModifier","modifierId","classId","includes","conflictGroups","i","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","Number","isNaN","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isLabelShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","testLabel","testValue","shouldMatchNoLabel","label","getDefaultConfig","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeTextShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scalePositionWithArbitrary","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","span","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleBgPosition","position","scaleBgRepeat","repeat","scaleBgSize","size","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleMaskImagePosition","scaleBlur","scaleRotate","scaleScale","scaleSkew","scaleTranslate","animate","aspect","blur","breakpoint","color","container","ease","font","leading","perspective","radius","shadow","spacing","text","tracking","columns","box","display","sr","float","clear","isolation","object","overflow","overscroll","inset","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","row","gap","justify","content","items","baseline","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","list","placeholder","decoration","indent","align","whitespace","break","wrap","hyphens","bg","linear","to","radial","conic","from","via","rounded","border","divide","outline","ring","opacity","mask","closest","farthest","filter","brightness","contrast","grayscale","invert","saturate","sepia","table","caption","transition","duration","delay","backface","rotate","scale","skew","transform","origin","translate","accent","appearance","caret","scheme","cursor","resize","scroll","snap","touch","select","fill","stroke","mergeConfigs","baseConfig","extend","override","overrideProperty","overrideConfigProperties","mergeConfigProperties","mergeArrayProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"mappings":"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"}},
    {"offset": {"line": 4576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}